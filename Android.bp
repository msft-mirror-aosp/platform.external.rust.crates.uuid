// This file is generated by cargo_embargo.
// Do not modify this file because the changes will be overridden on upgrade.

package {
    default_applicable_licenses: ["external_rust_crates_uuid_license"],
}

license {
    name: "external_rust_crates_uuid_license",
    visibility: [":__subpackages__"],
    license_kinds: ["SPDX-license-identifier-Apache-2.0"],
    license_text: ["LICENSE"],
}

rust_library {
    name: "libuuid",
    host_supported: true,
    crate_name: "uuid",
    cargo_env_compat: true,
    cargo_pkg_version: "1.7.0",
    crate_root: "src/lib.rs",
    edition: "2018",
    features: [
        "atomic",
        "rng",
        "serde",
        "std",
        "v1",
        "v4",
    ],
    rustlibs: [
        "libatomic_rust",
        "libgetrandom",
        "libserde",
    ],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    product_available: true,
    vendor_available: true,
}

rust_test {
    name: "uuid_test_src_lib",
    host_supported: true,
    crate_name: "uuid",
    cargo_env_compat: true,
    cargo_pkg_version: "1.7.0",
    crate_root: "src/lib.rs",
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "atomic",
        "rng",
        "serde",
        "std",
        "v1",
        "v4",
    ],
    rustlibs: [
        "libatomic_rust",
        "libbincode",
        "libgetrandom",
        "libserde",
        "libserde_json",
        "libserde_test",
    ],
    proc_macros: [
        "librustversion",
        "libserde_derive",
    ],
}

rust_library_rlib {
    name: "libuuid_nostd",
    crate_name: "uuid",
    cargo_env_compat: true,
    cargo_pkg_version: "1.7.0",
    crate_root: "src/lib.rs",
    edition: "2018",
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    prefer_rlib: true,
    no_stdlibs: true,
    stdlibs: [
        "libcompiler_builtins.rust_sysroot",
        "libcore.rust_sysroot",
    ],
    product_available: true,
    vendor_available: true,
}
